// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: uuid.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UUIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       int32                  `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ValueToHash   string                 `protobuf:"bytes,3,opt,name=valueToHash,proto3" json:"valueToHash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UUIDRequest) Reset() {
	*x = UUIDRequest{}
	mi := &file_uuid_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UUIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UUIDRequest) ProtoMessage() {}

func (x *UUIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uuid_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UUIDRequest.ProtoReflect.Descriptor instead.
func (*UUIDRequest) Descriptor() ([]byte, []int) {
	return file_uuid_proto_rawDescGZIP(), []int{0}
}

func (x *UUIDRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UUIDRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UUIDRequest) GetValueToHash() string {
	if x != nil {
		return x.ValueToHash
	}
	return ""
}

type UUIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UUIDResponse) Reset() {
	*x = UUIDResponse{}
	mi := &file_uuid_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UUIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UUIDResponse) ProtoMessage() {}

func (x *UUIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uuid_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UUIDResponse.ProtoReflect.Descriptor instead.
func (*UUIDResponse) Descriptor() ([]byte, []int) {
	return file_uuid_proto_rawDescGZIP(), []int{1}
}

func (x *UUIDResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

var File_uuid_proto protoreflect.FileDescriptor

const file_uuid_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"uuid.proto\x12\apratice\"g\n" +
	"\vUUIDRequest\x12\x18\n" +
	"\aversion\x18\x01 \x01(\x05R\aversion\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12 \n" +
	"\vvalueToHash\x18\x03 \x01(\tR\vvalueToHash\"\"\n" +
	"\fUUIDResponse\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid2E\n" +
	"\vUUIDService\x126\n" +
	"\aGetUUID\x12\x14.pratice.UUIDRequest\x1a\x15.pratice.UUIDResponseB\x15Z\x13pratice/proto;protob\x06proto3"

var (
	file_uuid_proto_rawDescOnce sync.Once
	file_uuid_proto_rawDescData []byte
)

func file_uuid_proto_rawDescGZIP() []byte {
	file_uuid_proto_rawDescOnce.Do(func() {
		file_uuid_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_uuid_proto_rawDesc), len(file_uuid_proto_rawDesc)))
	})
	return file_uuid_proto_rawDescData
}

var file_uuid_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_uuid_proto_goTypes = []any{
	(*UUIDRequest)(nil),  // 0: pratice.UUIDRequest
	(*UUIDResponse)(nil), // 1: pratice.UUIDResponse
}
var file_uuid_proto_depIdxs = []int32{
	0, // 0: pratice.UUIDService.GetUUID:input_type -> pratice.UUIDRequest
	1, // 1: pratice.UUIDService.GetUUID:output_type -> pratice.UUIDResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_uuid_proto_init() }
func file_uuid_proto_init() {
	if File_uuid_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_uuid_proto_rawDesc), len(file_uuid_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_uuid_proto_goTypes,
		DependencyIndexes: file_uuid_proto_depIdxs,
		MessageInfos:      file_uuid_proto_msgTypes,
	}.Build()
	File_uuid_proto = out.File
	file_uuid_proto_goTypes = nil
	file_uuid_proto_depIdxs = nil
}
